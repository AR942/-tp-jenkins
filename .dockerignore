/__pycache__
.dockerignore
Dockerfile

Dockerfile

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Charger le dataset (remplace 'ton_fichier.csv' par le nom de ton fichier)
df = pd.read_csv('ton_fichier.csv')

# Explorer les premières lignes du dataset
print(df.head())

# Vérifier les types de données et la présence de valeurs manquantes
print(df.info())

# Statistiques descriptives
print(df.describe())

# Compter le nombre d'occurrences de chaque règle
plt.figure(figsize=(10, 6))
sns.countplot(x='rule_tag', data=df)
plt.title('Nombre d\'occurrences par règle')
plt.xticks(rotation=45)
plt.show()

# Distribution du Count
plt.figure(figsize=(10, 6))
sns.histplot(df['Count'], bins=30, kde=True)
plt.title('Distribution du Count')
plt.show()

# Boxplot par règle pour le Count
plt.figure(figsize=(12, 8))
sns.boxplot(x='rule_tag', y='Count', data=df)
plt.title('Boxplot du Count par règle')
plt.xticks(rotation=45)
plt.show()

# Lineplot pour observer les tendances temporelles
plt.figure(figsize=(14, 8))
sns.lineplot(x='hour_log', y='Count', hue='rule_tag', data=df)
plt.title('Tendances temporelles par règle')
plt.show()

# Heatmap de la corrélation entre les variables numériques
correlation_matrix = df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Matrice de corrélation')
plt.show()

# Pairplot pour explorer les relations entre les variables numériques
sns.pairplot(df, hue='rule_tag')
plt.suptitle('Pairplot', y=1.02)
plt.show()
