/__pycache__
.dockerignore
Dockerfile

Dockerfile

import pandas as pd

# Supposons que 'model' est votre modèle déjà entraîné

# Trouvez la dernière date dans vos données
last_date = data['date'].max()

# Créez une liste de dates futures jusqu'en novembre
future_dates = pd.date_range(start=last_date + pd.Timedelta(days=1), end='2023-11-01', freq='D')

# Ajoutez une colonne pour indiquer les week-ends (1 pour le week-end, 0 sinon)
future_dates_df = pd.DataFrame({'date': future_dates})
future_dates_df['is_weekend'] = (future_dates_df['date'].dt.dayofweek >= 5).astype(int)

# Préparez les données pour la prédiction en ajoutant les features nécessaires
future_data = pd.DataFrame({
    'day_of_week': future_dates_df['date'].dt.dayofweek,
    'day_of_month': future_dates_df['date'].dt.day,
    'month': future_dates_df['date'].dt.month,
    'year': future_dates_df['date'].dt.year,
    'licenses_prev_day': data['licenses'].iloc[-1],  # ou utilisez une valeur par défaut appropriée
    'is_holiday': future_dates_df['date'].isin(ferie_dates).astype(int),
    'is_weekend': future_dates_df['is_weekend']
})

# Effectuez la prédiction
predictions = model.predict(future_data)

# Créez un DataFrame avec les dates et les prédictions
predictions_df = pd.DataFrame({'date': future_dates, 'predicted_licenses': predictions})

# Affichez les résultats
print(predictions_df)
